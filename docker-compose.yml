services:
  mongodb:
    image: mongo:7
    container_name: highway-delite-db
    restart: unless-stopped
    command: --auth --quiet  # Add --quiet to reduce log verbosity
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: highway_delite
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - highway-delite-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build: ./server
    container_name: highway-delite-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://highway_user:${MONGO_PASSWORD}@mongodb:27017/highway_delite
      JWT_SECRET: ${JWT_SECRET}
      GMAIL_EMAIL: ${GMAIL_EMAIL}
      GMAIL_PASSWORD: ${GMAIL_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - highway-delite-network

  frontend:
    build: 
      context: ./client
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
        VITE_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    container_name: highway-delite-frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - highway-delite-network

volumes:
  mongodb_data:

networks:
  highway-delite-network:
    driver: bridge
